; ------------------------------------------------------------------------
; BlitzSonic Engine -- Classic Sonic the Hedgehog engine for Blitz 3D
; version 0.1, February 7th, 2008
;
; Copyright (C) 2008 - BlitzSonic Team.
; ------------------------------------------------------------------------
;
; This software is provided 'as-is', without any express or implied
; warranty.  In no event will the authors be held liable for any damages
; arising from the use of this software.
; 
; Permission is granted to anyone to use this software for any purpose
; (except for commercial applications) and to alter it and redistribute
; it freely subject to the following restrictions:
;
; 1. The origin of this software must not be misrepresented; you must not
;    claim that you wrote the original software. If you use this software
;    in a product, an acknowledgment in the product itself as a splash
;    screen is required.
; 2. Altered source versions must be plainly marked as such, and must not be
;    misrepresented as being the original software.
; 3. This notice may not be removed or altered from any source distribution.
;
; All characters and materials in relation to the Sonic the Hedgehog game series
; are copyrights/trademarks of SEGA of Japan (SEGA Co., LTD). This product
; has been developed without permission of SEGA, therefore it's prohibited
; to sell/make profit of it.
;
; The BlitzSonic Team:
; - Héctor "Damizean" (elgigantedeyeso at gmail dot com)
; - Mark "Coré" (mabc_bh at yahoo dot com dot br)
; - Streak Thunderstorm
; - Mista ED
;

;\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/;
;	Project Title : Sonic the Hedgehog                                                                         ;
; ============================================================================================================ ;
;	Author :                                                                                                   ;
;	Email :                                                                                                    ;
;	Version: 0.1                                                                                               ;
;	Date: --/--/2008                                                                                           ;
;                                                                                                              ;
;\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/;
;                                                                                                              ;
;   Changelog:  -(Damizean)------------------------------->                                                    ;
;               17/01/2008 - Code reorganization.                                                              ;
;                                                                                                              ;
;==============================================================================================================;
;                                                                                                              ;
;   TODO:                                                                                                      ;
;                                                                                                              ;
;==============================================================================================================;

; /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
;   METHODS
; /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/

	; =========================================================================================================
	; Player_Animate
	; =========================================================================================================
	Function Player_Animate(p.tPlayer, d.tDeltaTime)
		; Change animation depending on action
		Select p\Action
			Case ACTION_COMMON
				SpeedLength# = Sqr#(p\Motion\Speed\x#^2+p\Motion\Speed\z#^2)

				If (p\Motion\Ground = True) Then 
					p\Animation\Animation = 0
					If (SpeedLength# > 0.0)  Then p\Animation\Animation = 1
					If (SpeedLength# > 3.30) Then p\Animation\Animation = 2
				End If
			Case ACTION_JUMP
				p\Animation\Animation = 3
			Case ACTION_CROUCH
				p\Animation\Animation = 1
			Case ACTION_SPINDASH
				p\Animation\Animation = 3
			Case ACTION_FALL
				p\Animation\Animation = 4
			Case ACTION_JUMPDASH
				p\Animation\Animation = 3
			Case ACTION_SPRING
				p\Animation\Animation = 5
			Case ACTION_SPRINGFALL
				p\Animation\Animation = 4
		End Select

		; If the animation changed, animate new
		If (p\Animation\Animation<>p\Animation\PreviousAnimation) Then
			Select p\Animation\Animation
				Case 0
					RecursiveAnimate(p\Objects\Mesh, 1, 0.2, 1, 8)
				Case 1
					RecursiveAnimate(p\Objects\Mesh, 1, 0.4, 2, 8)
					p\Animation\Time# = 0.0
				Case 2
					RecursiveAnimate(p\Objects\Mesh, 1, 1.6, 3, 9)
					p\Animation\Time# = 0.0
				Case 3
					RecursiveAnimate(p\Objects\Mesh, 1, 0.9, 4, 8)
				Case 4
					RecursiveAnimate(p\Objects\Mesh, 1, 0.8, 5, 8)
				Case 5
					RecursiveAnimate(p\Objects\Mesh, 1, 0.8, 6, 8)
			End Select
			
			p\Animation\PreviousAnimation = p\Animation\Animation
		End If

		; Depending on animation, change animation speed
		Select p\Animation\Animation
			Case 1
				p\Animation\Time# = p\Animation\Time#+Sqr#(p\Motion\Speed\x#^2+p\Motion\Speed\z#^2)*0.53*d\Delta
				RecursiveSetAnimTime(p\Objects\Mesh, p\Animation\Time#, 2)
			Case 2
				p\Animation\Time# = p\Animation\Time#+Sqr#(p\Motion\Speed\x#^2+p\Motion\Speed\z#^2)*0.50*d\Delta
				RecursiveSetAnimTime(p\Objects\Mesh, p\Animation\Time#, 3)
		End Select

		; On spinning animation, show ball
	;	If (p\Animation\Animation = 3) Then
	;		If ((MilliSecs() Mod 20) < 10) Then : ShowEntity(p\Objects\Mesh_JumpBall)
	;		Else : HideEntity(p\Objects\Mesh_JumpBall) : End If
	;	Else
	;		HideEntity(p\Objects\Mesh_JumpBall)
	;	End If
		
		; Update normals
		RecursiveUpdateNormals(p\Objects\Mesh)
	End Function